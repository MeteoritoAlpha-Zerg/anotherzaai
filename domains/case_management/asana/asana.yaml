name: asana
description: Exported agent state from 474680a22a8d41d1a08082517479587d

tests:
-   description: This checks to see that the connector is able to return a listing of tools
    preconditions: A data connector implementation per the provided interfaces
    postconditions: The data connector is able to provide a list of supported tools and interfaces
    entry_point: test_tools_interface
    function_to_run: !python/file '1-test_tools_interface.py'
-   description: This checks that the connector can successfully verify its connection
    preconditions: A connector implementation adhering to ConnectorInterface is available as 'connector'
    postconditions: The check_connection method returns True if the connector is correctly configured
    entry_point: test_connector_check_connection
    function_to_run: !python/file '2-test_connector_check_connection.py'
-   description: get_query_target_options enumerates Asana workspaces
    preconditions: An existing Asana API token and credentials
    postconditions: "Possible to retrieve the list of Asana workspaces using get_query_target_options\nand to then use this\
        \ to set the options in a given AsanaConnectorConfig which is \nsubclassed from ConnectorConfig - adheres to example\
        \ API response in query_target_options.py;\nThese must be real workspaces, and not simulated;"
    entry_point: test_workspace_enumeration_options
    function_to_run: !python/file '3-test_query_target_options.py'
-   description: List Asana workspaces for selected Asana workspaces in target
    preconditions: An existing Asana API token and credentials
    postconditions: "Possible to retrieve the list of Asana workspaces by way of connector tools;\nThis list includes details\
        \ of the workspaces to be listed in results; \nThese must be real workspaces, and not simulated;"
    entry_point: test_list_workspaces
    function_to_run: !python/file '4-test_list_workspaces.py'
-   description: Retrieve projects for selected Asana workspace passed as param
    preconditions: An existing Asana API token and credentials
    postconditions: "Possible to retrieve a set of projects for the selected Asana workspace as passed as a param to the connector\
        \ tools;\nThis list only includes projects of the target workspace to be listed in results; \nThese must be real projects,\
        \ and not simulated;"
    entry_point: test_project_retrieval
    function_to_run: !python/file '5-test_project_retrieval.py'
-   description: Retrieve tasks for selected Asana project passed as param
    preconditions: An existing Asana API token and credentials
    postconditions: "Possible to retrieve a set of tasks for the selected Asana project as passed as a param to the connector\
        \ tools;\nThis list only includes tasks of the target project to be listed in results; \nThese must be real tasks,\
        \ and not simulated;"
    entry_point: test_task_retrieval
    function_to_run: !python/file '6-test_task_retrieval.py'

specs:
-   description: "The Asana Connector is able to authenticate with Asana per its implementation in the code \nenvironment\
        \ only"
    preconditions: This spec has no strict preconditions
    postconditions: |-
        The Asana connector is able to authenticate properly with an Asana instance;
        The Asana connector config is of type ConnectorConfig and not AlertProviderConnectorConfig;
-   description: Asana Connector is able to list Asana workspaces per user of get_query_target_options
    preconditions: A valid authenticated session with Asana
    postconditions: Connector successfully enumerates workspaces to populate the target options of the AsanaTarget;
-   description: Asana Connector is able to list workspace information
    preconditions: A valid authenticated session with Asana
    postconditions: |-
        Per the configuration as contained in AsanaTarget as provided to AsanaConnectorTools, it is possible
        to get a list of workspaces along with their respective description and other relevant workspace details
        as may be relevant;
        Ensure that the respective get_asana_workspaces function in the AsanaConnectorTools is not hardcoding
        any return values;
-   description: Asana Connector is able to list projects in a selected workspace
    preconditions: A valid authenticated session with Asana
    postconditions: |-
        Connector successfully lists projects for the selected workspace provided as a param
        to the list projects tool
-   description: Asana Connector is able to list tasks in a selected project
    preconditions: A valid authenticated session with Asana
    postconditions: |-
        Connector successfully lists tasks for the selected project provided as a param
        to the list tasks tool

configs:
-   name: asana_personal_access_token
    value: []
    description: Personal Access Token for authenticating with Asana, note this should be included as personal_access_token
        in AsanaConnectorConfig
-   name: asana_api_request_timeout
    value: 30
    description: Request timeout in seconds
-   name: asana_api_max_retries
    value: 3
    description: Number of times to retry API requests upon failure
-   name: additional considerations
    value:
    - AsanaConnectorConfig should derive from ConnectorConfig, this is not a connector of type AlertProviderConnectorConfig
        config
    - authentication should not be a tool, tools should handle authentication when used (so should not be explicitly exposed)
    - utilize the query target options to determine which workspaces are valid for the target, and then use the target to
        select which workspaces to actually pull data from for the respective tools as shown in the unit tests
    description: "Additional considerations for the generation of specifically the Asana connector \nwith regards to the connector\
        \ framework as provided - please keep these strongly in mind"

metadata:
    agent_uuid: 474680a22a8d41d1a08082517479587d
    status: IDLE
    max_depth: 500
    export_timestamp: '2025-09-01 14:43:24.719846'
    environment_type: FSEnvironment
    environment_name: fs_environment
    environment_root: /tmp/zerg/agent_workspace_vzwvpubt/environment
    workspace_path: ''
    workspace_files_count: 0
